Программа ReadNode.py предназначена для парсинга экспорта узла SI3000 для продуктов CS, MG, CCS.
Позволяет посмотреть основные данные узла без просмотра конкретных файлов таблиц.
Также, сделана в основном для быстрого вывода основной информации при создания узла на макете и последующего импорта данных.
Скрипт читает следующие таблицы:
- node.dat
- ne_hostname.dat
- mn_node_version.dat 
- board.dat
и выводит информацию в текстовый файл.
На основе данных из файла mn_node_version.dat, осуществляется парсинг файла "Версии ПО MN V5_6.xls"  c версиями
пакетов и последующий  выводит все релизов, в которых есть совпадения по dbrelease и daterelease. Что бы это сработало, необходимо разместить 
данный файл в одной дирректории со скриптом.

Версия Python.

Скрипт ReadNode.py ориентирован на работу в среде python 3.4 и выше.

Установка Python.

Для установки среды Python на windows нужно скачать версию python 3.4 и выше с официально сайта: https://www.python.org
При запуске инсталлятора обязательно поставьте галочку в пункте добавления пути в переменную Path.
Если Вы этого не сделали, то придется вручную добавить путь. Пример:
C:\Python\Python35-32\
Так же ещё нужно добавить путь до встроенных скриптов:
C:\Python\Python35-32\Scripts\

Установка пакета pip.

Установщик пакетов pip позволяет устанавливать дополнительные библиотеки.
1. Для установки pip следует в cmd запустить скрипт get-pip.py, который скачает из интернета необходимый репозиторий.

Установка библиотеки xlrd.

Для парсинга документов в формате xls используется сторонняя библиотека xlrd.
1. Для установки библитеки в командной строке выполнить команду pip install xlrd (скачается библиотека для парсинга xls документов)

Запуск скрипта ReadNode.py.
Скрипт запускается в командной строке с использованием одного обязательного аргумента и одного необязательного аргумента.
Пример: ReadNode directory [-t cs,mg,ccs] => ReadNode ne3000 или ReadNode ne3000 -t cs
Обязательным аргументом является - directory, в качесте которого указывается название директории экспорта или директория с полным путем до экспорта,
если она не находится в одной директории со скриптом ReadNode.py.

Ключ [-t] явным образом указывает тип продукта (cs,ccs,mg). Пример: -t mg
Это связано с тем, что данные в файле board.dat для разных продуктов имеет немного разную структуру.
Данный ключ применяется в том случае, если скрипт не смог автоматически распознать релиз пакета. Распознавание происходит на основе парсинга 
файла "Версии ПО MN V5_6.xls". В случае, если этот файл отсутствует или искомого релиза в нём нет, то следует явно указать тип продукта с помощью ключа [-t].

Версии:

"0.0.1" - первая версия.
- имеется функция help. Вызывается в стиле unix: ReadNode --help или -h
- ключ [-t] работает для аргумента cs,mg(CMI) - для CMF не тестировал. Не работает для ccs.

"0.0.2"
- Добавлено дополнительное отображение типа платы (CVH, CVI ...), по анализу кода BOARD_TYPE.  
  Информация выводится в продолжении строки BOARD_TYPE 

"0.0.3"
- Добавлено дополнительный тип BOARD_TYPE 44 - CMF.  
  Информация выводится в продолжении строки BOARD_TYPE 